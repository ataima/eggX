
<?xml version="1.0"?>    									
<egg>													
	<project>							#project define 
		<name>binutils</name>			
		<download>check</download>		# download see sources.sh
		<remote>
			<method>wget</method>
			<url>ftp://ftp.gnu.org/gnu/binutils</url>
			<file>binutils-2.28.tar.bz2</file>
			<key>
				<url>ftp://ftp.gnu.org/gnu/binutils</url>
				<file>binutils-2.28.tar.bz2.sig</file>
			<key>
			<password>12345678 </password>    #optional svn / git password
			#TODO  add fw nodes
			# depend   id=xx                                     optinal  :before download this project you must download depend projects
			# depend/action                                       link to source , copy source, etc
			# ssh_user                                                optinal :for access via ssh with user certificate
			# alternate						  optinal :alternate via to download source
			# backup                                                  optinal :repository backup : if remote & alternate fail copy from here..
			# alway_backup                                       optinal :alway after a update or check create a source backup
		</remote>	
		<build>								 # build step
			<step id="0">					 # step nn :  < configure make install  packet >	,< configure make install  packet >....
			<priority>0</priority>				 # into a step  0 first project compiled  , 1 second...nn
			<name> prepare_gcc_native</name>
			<arch>x86_64</arch>				 # arch =x86 , arm etc
		        <cross>i686-elf</cross>			 # specific cross 
			<silent>yes</silent>				 # optional silent compile : yes/no default yes
			<threads>8</threads>			 # optional parameter to pass to make -jxx : optional value 1..16, default 2
			<path>
				<pre >				# before configure step can do this pre_conf  xx
					<add id="0">script</add>		add  $DEPLOY/script to path 
					<remove id="0">test </remove>             # remove  $DEPLOY/test to path
					<set >pippo</set> 			#absolute set to pippo
				</pre>
				<post >				# before configure step can do this pre_conf  xx
					<add id="0">script</add>		add  $DEPLOY/script to path 
					<remove id="0">test </remove>             # remove  $DEPLOY/test to path
					<set>pippo</set> 			#absolute set to pippo
				</post>
			</path>
			<configure>
				<pre id="0">				# before configure step can do this pre_conf  xx
					<mode>script</mode>		# mode : script, source, code 
					<value>test.sh </value>             # call test.sh
										# optinal value id="0"
												value id="1" in the same node	
				</pre>
				<pre id="1">
					<mode>code</mode>			# mode code 
					<value> echo hello</value>          # execute echo hello
				</pre>
				<extra id="0">--disable-werror</extra_conf>	# extra configure parameter to pass to configure
				<extra id="1">--disable-nls</extra_conf>	
				<post id="0">				# after configure step can do this pre_conf  xx
					<mode>code</mode>
					<value>echo end</value>
				</post>
				<post id="1">
					<mode>script</mode>
					<value>test.sh</value>
				</post>
			</configure>
			
			<pre_build id="0">				# before make step can do this pre_build  xx
				<mode>script</mode>		# mode : script, source, code 
				<value>test.sh </value>        # call test.sh
			</pre_build>
			<post_build id="0">			# after make step can do this pre_build  xx
				<mode>script</mode>		# mode : script, source, code 
				<value>test.sh </value>        # call test.sh
			</post_build>
			<pre_install id="0">			# before make install step can do this pre_build  xx
				<mode>script</mode>		# mode : script, source, code 
				<value>test.sh </value>        # call test.sh
			</pre_install>
			<post_install id="0">			# after make install step can do this pre_build  xx
				<mode>script</mode>		# mode : script, source, code 
				<value>test.sh </value>        # call test.sh
			</post_install>
			</step>							#next step for this projects: same source code change configure and build path
			<step id="nn">
			......
			</step>
		</build>
	</project>
</egg>