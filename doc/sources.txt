sources.sh :
conf.egg xml structure:

<?xml version="1.0"?>
<egg>
	<project>
		<name>svn</name>
		<download>check</download>		
		<remote>
			<method>svn</method>
			<url>http://svn.apache.org/repos/asf </url>
			<file>subversion/trunk</file>
			<password>pippo</password>			
		</remote>
		<patch id="0">
			<method>file</method>
			<url> /home/angelo </url>
			<file>p1.patch</file>
			<password>pippo</password>	
		</patch>
	</project>
</egg>

egg.project.name = project name must be equal to path in repo
egg.project.download =
		-FORCE     always download the source
		-SKIP      not execute nothing
		-CHECK     check sign source if avaiable 
		-UPDATE    update source (only SVN-GIT-FILE )

egg.project.remote.method=WGET, SVN, GIT, FILE ,APT: method to dwnload the source
egg.project.remote.url=link to path  to download (file,ftp,git,http...)
egg.project.remote.file=filename to download ( or svn - git project..)
egg.project.remote.password = optional password for svn git 


egg.project.patch id="xx".method=WGET, SVN, GIT, FILE ,APT: method to dwnload the source
egg.project.patch id="xx".url=link to path  to download (file,ftp,git,http...)
egg.project.patch id="xx".file=filename to download ( or svn - git project..)
egg.project.patch id="xx".password = optional password for svn git 


INPUT PARAMETER
-D or --debug set debug on 
-F or --force <project> force the download of project
-G or --gpg <link >   get a new gpg key to verify sign : default gnu keys already inported as default..
-C or --createpatch : create with svn, git or diff a patch from current source" 
-B or --backup : create backup of source as pair of <prj>.tar.bz2 <prj>sign" 
